mysql:
  host: 127.0.0.1
  port: 3306
  username: root
  password: root123456

redis:
  host: 192.168.1.86
  port: 6379
  database: 0
 # password: redis123$%^
server:
  port: 8711
spring:
  main:
    allow-bean-definition-overriding: true
  # shardingsphere 分表分库配置
  shardingsphere:
    #从主配置
    #masterslave:
      # 读写分离配置
    #  load-balance-algorithm-type: round_robin
      # 最终的数据源名称
    #  name: dataSource
      # 主库数据源名称
    #  master-data-source-name: m1
      # 从库数据源名称列表，多个逗号分隔
   #   slave-data-source-names: m2
    datasource:
      names: m1,m2
      m1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://${mysql.host}:${mysql.port}/order_db_2?useUnicode=true&characterEncoding=utf-8&characterSetResults=utf8&autoReconnect=true&failOverReadOnly=false&useSSL=true&verifyServerCertificate=false&serverTimezone=GMT%2B8
        username: ${mysql.username}
        password: ${mysql.password}
      m2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://${mysql.host}:${mysql.port}/order_db_1?useUnicode=true&characterEncoding=utf-8&characterSetResults=utf8&autoReconnect=true&failOverReadOnly=false&useSSL=true&verifyServerCertificate=false&serverTimezone=GMT%2B8
        username: ${mysql.username}
        password: ${mysql.password}
    sharding:
      tables:
        t_order:
          # 指定t_order表的数据分布情况，配置数据节点
          #actual-data-nodes: m$->{1..2}.t_order_$->{1..2}
          actual-data-nodes: m1.t_order_$->{1..2}
          table-strategy:
            # 指定t_order表的分片策略，分片策略包括分片键和分片算法
            inline:
              sharding-column: id
              algorithm-expression: t_order_$->{id % 2 + 1}
          # 指定t_order表的主键生成策略为SNOWFLAKE
          key-generator:
            type: SNOWFLAKE  #主键生成策略为SNOWFLAKE
            column: id
      binding-tables:
        - t_order
    props:
      # 开启SQL显示，默认false
      sql:
        show: true
  redis:
    database: ${redis.database}
    host: ${redis.host}
    port: ${redis.port}
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
mybatis-plus:
  # classpath要加上后面的*，表示通配符，匹配任意路径
  mapper-locations: classpath*:/mapper/*Mapper.xml
  typeAliasesPackage: com.sphere.mybatis.entity
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true # 开启xml缓存
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: auto


